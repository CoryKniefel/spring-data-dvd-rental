plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.fun'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
}

sourceSets {
    integrationtest {
        java {
            compileClasspath += sourceSets.main.output + sourceSets.test.output
            runtimeClasspath += sourceSets.main.output + sourceSets.test.output
            srcDir file('src/integrationtest/java')
        }
        resources.srcDir file('src/integrationtest/resources')
    }
}

configurations {
    integrationtestImplementation.extendsFrom testImplementation
    integrationtestRuntimeOnly.extendsFrom testRuntimeOnly
}

task integrationtest(type: Test) {
    testClassesDirs = sourceSets.integrationtest.output.classesDirs
    classpath = sourceSets.integrationtest.runtimeClasspath
    useJUnitPlatform()
}

// include the integration tests during the check task of build execution
check.dependsOn integrationtest

// keep IT tests separate from unit tests
tasks.named('test') {
    useJUnitPlatform()
    exclude '**/*IT.class'
}
